---
title: Impute variants
author: Nurfatima Jandarova
date: 5 December 2024
---

I am using [Michigan Imputation Server 2](https://imputationserver.sph.umich.edu/) with HRC 1.1 as a reference panel. The server requires registration, but is free to use. It can also be accessed via API[^1]. The genotype data has been filtered through sample and variant QC.

[^1]: Requires API token that can also be obtained after registration. I saved my token in `_environment.local` file.

```{r}
#| label: load-packages

library(tidyverse)
library(httr2)
library(jsonlite)
library(pbapply)
```

```{r}
#| label: plink

plink <- '09_Software/plink_mac_20241022/plink'
system2(plink, args = c('--version'), stdout = TRUE) |> cat(sep = '\n')

plink2 <- '09_Software/plink2'
system2(plink2, args = c('--version'), stdout = TRUE) |> cat(sep = '\n')
```

I saved my API token in `_environment.local` file. The code below reads it and extracts the necessary variable.

```{r}
#| label: read-environment

readRenviron('_environment.local')
```

## Submit imputation job via API

::: callout-important
## Failed to use API

I couldn't get the API request to work. Please, use the job submission on [Michigan Imputation Server 2](https://imputationserver.sph.umich.edu/) to re-run the imputation, if needed. The output can also be downloaded from there. The guidelines for submitting an imputation job are [here](https://genepi.github.io/michigan-imputationserver/getting-started/).
:::

```{r}
#| label: submit-job-api
#| eval: false

base_url <- 'https://imputationserver.sph.umich.edu/api/v2/'
type_url <- 'jobs/submit/imputationserver2'
api_token <- Sys.getenv('MIS2_TOKEN')
gtp_list <- list.files('01_Data/imputation_files/upload/', pattern = '.vcf.gz', 
                       full.names = TRUE)

mis2_query <- request(base_url = base_url) |> 
  req_url_path_append(type_url) |> 
  req_url_query(mode = 'imputation', 
                refpanel = 'hrc-r1.1', 
                phasing = 'eagle', 
                population = 'eur', 
                build = 'hg19', 
                r2Filter = '0') |> 
  req_headers('X-Auth-Token' = api_token) |> 
  req_body_multipart(files = curl::form_file(gtp_list[[1]]), 
                     files = curl::form_file(gtp_list[[2]]), 
                     files = curl::form_file(gtp_list[[3]]), 
                     files = curl::form_file(gtp_list[[4]]), 
                     files = curl::form_file(gtp_list[[5]]), 
                     files = curl::form_file(gtp_list[[6]]), 
                     files = curl::form_file(gtp_list[[7]]), 
                     files = curl::form_file(gtp_list[[8]]), 
                     files = curl::form_file(gtp_list[[9]]), 
                     files = curl::form_file(gtp_list[[10]]), 
                     files = curl::form_file(gtp_list[[11]]), 
                     files = curl::form_file(gtp_list[[12]]), 
                     files = curl::form_file(gtp_list[[13]]), 
                     files = curl::form_file(gtp_list[[14]]), 
                     files = curl::form_file(gtp_list[[15]]), 
                     files = curl::form_file(gtp_list[[16]]), 
                     files = curl::form_file(gtp_list[[17]]), 
                     files = curl::form_file(gtp_list[[18]]), 
                     files = curl::form_file(gtp_list[[19]]), 
                     files = curl::form_file(gtp_list[[20]]), 
                     files = curl::form_file(gtp_list[[21]]), 
                     files = curl::form_file(gtp_list[[22]])) |> 
  req_progress()

mis2_output <- req_perform(mis2_query)
```

```{r}
#| label: check-status
#| eval: false

request(base_url = base_url) |> 
  req_url_path_append(sprintf('jobs/%s/status', 
                              resp_body_json(mis2_output)$id)) |> 
  req_headers('X-Auth-Token' = api_token) |> 
  req_perform() |> 
  resp_body_json()
```
